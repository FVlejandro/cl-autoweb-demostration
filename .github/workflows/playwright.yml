name: Playwright Tests

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      # 1. Checkout del código
      - uses: actions/checkout@v4

      # 2. Instalamos Node y dependencias
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm ci

      # 3. Instalamos navegadores de Playwright
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      # 4. Ejecutamos los tests usando el reporter de Allure
      #    Esto genera la carpeta `allure-results`
      - name: Run Playwright tests with Allure reporter
        run: npx playwright test --reporter=line,allure-playwright

      # —————————————————————————————————————————
      # Pasos para integrar GitHub Pages + historial
      # —————————————————————————————————————————

      # 5. Cargar historial de reportes (para que Allure lo mezcle)
      - name: Load test report history
        if: always()
        continue-on-error: true
        uses: actions/checkout@v4
        with:
          ref: gh-pages            # rama donde vive el reporte publicado
          path: allure-history     # carpeta local donde se clona

      # 6. Construir el reporte Allure (actual + anterior)
      - name: Build Allure Report
        if: always()
        uses: simple-elf/allure-report-action@v1.7
        with:
          gh_pages: allure-history    # misma carpeta de historial
          allure_results: allure-results
          allure_history: allure-report  # carpeta donde se vuelca el HTML

      # 7. Publicar en gh‑pages
      - name: Publish Allure Report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-report



